from core.loader import Module, tds
import requests

@tds
class WeatherModule(Module):
    """–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —á–µ—Ä–µ–∑ OpenWeather"""
    strings = {"name": "Weather"}

    def __init__(self):
        super().__init__()
        self.name = self.strings["name"]
        self.api_key = "7c9f1d584b3b1afcaea70a61002ee561"  # —Ç–≤–æ–π –∫–ª—é—á
        self.api_url = "http://api.openweathermap.org/data/2.5/weather"

    async def wtrcmd(self, event):
        city = event.pattern_match.group(1).strip()
        if not city:
            return await event.edit("‚ùå –£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä: `.wtr –ú–∏–Ω—Å–∫`")

        await event.edit("‚õÖ –ü–æ–ª—É—á–∞—é –ø–æ–≥–æ–¥—É...")

        try:
            params = {
                "q": city,
                "appid": self.api_key,
                "units": "metric",
                "lang": "ru"
            }
            response = requests.get(self.api_url, params=params)
            data = response.json()

            if data.get("cod") != 200:
                return await event.edit(f"‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: <code>{city}</code>")

            name = data["name"]
            temp = data["main"]["temp"]
            feels_like = data["main"]["feels_like"]
            description = data["weather"][0]["description"].capitalize()
            humidity = data["main"]["humidity"]
            wind = data["wind"]["speed"]

            text = (
                f"üåç <b>{name}</b>\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{temp}¬∞C</b>\n"
                f"ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <b>{feels_like}¬∞C</b>\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: <b>{humidity}%</b>\n"
                f"üå¨ –í–µ—Ç–µ—Ä: <b>{wind} –º/—Å</b>\n"
                f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>{description}</b>"
            )

            await event.edit(text, parse_mode="html")
        except Exception as e:
            await event.edit(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: <code>{e}</code>")