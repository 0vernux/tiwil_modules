from core import loader
import requests

@loader.tds
class ShortenerMod(loader.Module):
    """–°–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ is.gd"""
    strings = {"name": "Shortener"}

    async def shortcmd(self, message):
        """–°–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É: .short <—Å—Å—ã–ª–∫–∞>"""
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            return await message.edit("‚ùó –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è.")
        
        url = args[1].strip()

        try:
            response = requests.get("https://is.gd/create.php", params={"format": "simple", "url": url})
            short_link = response.text.strip()
            if short_link.startswith("Error:"):
                await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {short_link}")
            else:
                await message.edit(f"üîó –°–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{short_link}")
        except Exception as e:
            await message.edit(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Å—ã–ª–∫—É:\n<code>{e}</code>", parse_mode="html")